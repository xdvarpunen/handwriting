{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home This doc includes information related to handwriting as tool. Journey I am building handwriting recognition from scratch. While working on it looking around and finding the answer what is the challenge in making working handwriting recognition. Implementations First implementation is about having lines passing through circles in a defined size of a box. If all circles are passed then handwriting is recognized as that symbol. This worked with three different numbers (0,1,2), but after that recognition required order due to overlapping lines. On first implementation I am using just HTML file. Second implementation uses snap to grid functionality. Instead of having recognition areas that need to pass through the user is helped to always get certain locations set. This way order is simple to define and recognizing numbers from 0 to 9 was done. This implementation does not scale further due to lacking amount of points. Handwriting recognition demo that supports through snap to grid functionality 0-9 number recognition. On second implementation I am still using just HTML file. Third implementation is handwriting on canvas. No restricting areas beside canvas. Line strokes are recognized to be certain type. Intersecting lines are grouped together. Stroke groups are recognized as letters. There was trouble with differentiating line corner and line curve. Third implementation recognized roughly 5 or more letters. Demo incoming . On third implementation I moved to TypeScript due to size of the application. The third implementation gave idea to create tool that could facilitate creating rules and features for the handwriting recognition. Tool is built using Python and Tkinter. Fourth implementation is ongoing. In this implementation line curve and line corner is solved. More written here when get it done. Figured out the difference between corner and curve by using two additional lines. Comparing the right line and left line of the line drawn finding the intersection can be used to define curves. When lines of the left and right don't intersect then it is corner. Below example the dots show the intersection points of the left and right line of the drawn line. Notice how letter 'L' has no intersection. Fourth implementation worked with full set of alphabet characters (Stone Optimized Shorthand). Demo below: Continuing to develop more features than just alphabet characters. Additional features will be numbers, punctuation, space and different character set.","title":"Home"},{"location":"#home","text":"This doc includes information related to handwriting as tool.","title":"Home"},{"location":"#journey","text":"I am building handwriting recognition from scratch. While working on it looking around and finding the answer what is the challenge in making working handwriting recognition.","title":"Journey"},{"location":"#implementations","text":"First implementation is about having lines passing through circles in a defined size of a box. If all circles are passed then handwriting is recognized as that symbol. This worked with three different numbers (0,1,2), but after that recognition required order due to overlapping lines. On first implementation I am using just HTML file. Second implementation uses snap to grid functionality. Instead of having recognition areas that need to pass through the user is helped to always get certain locations set. This way order is simple to define and recognizing numbers from 0 to 9 was done. This implementation does not scale further due to lacking amount of points. Handwriting recognition demo that supports through snap to grid functionality 0-9 number recognition. On second implementation I am still using just HTML file. Third implementation is handwriting on canvas. No restricting areas beside canvas. Line strokes are recognized to be certain type. Intersecting lines are grouped together. Stroke groups are recognized as letters. There was trouble with differentiating line corner and line curve. Third implementation recognized roughly 5 or more letters. Demo incoming . On third implementation I moved to TypeScript due to size of the application. The third implementation gave idea to create tool that could facilitate creating rules and features for the handwriting recognition. Tool is built using Python and Tkinter. Fourth implementation is ongoing. In this implementation line curve and line corner is solved. More written here when get it done. Figured out the difference between corner and curve by using two additional lines. Comparing the right line and left line of the line drawn finding the intersection can be used to define curves. When lines of the left and right don't intersect then it is corner. Below example the dots show the intersection points of the left and right line of the drawn line. Notice how letter 'L' has no intersection. Fourth implementation worked with full set of alphabet characters (Stone Optimized Shorthand). Demo below: Continuing to develop more features than just alphabet characters. Additional features will be numbers, punctuation, space and different character set.","title":"Implementations"},{"location":"papers/","text":"Papers Papers related to handwriting recognition can be found in following sources Semantic Scholar ScienceDirect Academia Google Scholar","title":"Papers"},{"location":"papers/#papers","text":"Papers related to handwriting recognition can be found in following sources Semantic Scholar ScienceDirect Academia Google Scholar","title":"Papers"},{"location":"stylus-supported-file-formats/","text":"Stylus Supported File Formats Stylus supported applications have feature to save drawn result into specific file format. File format can be reused in other applications and transformed into other file formats. InkML (\"application/inkml+xml\", .ink, .inkml) InkML is an XML data format for representing digital ink data that is input with an electronic pen or stylus as part of a multimodal system. In the context of the W3C Multimodal Interaction Framework, the markup provides a format for: transferring digital ink data between devices and software components storing hand-input traces for: Handwriting recognition (including text, mathematics, chemistry) Signature verification Gesture interpretation https://www.w3.org/2002/mmi/ink https://en.wikipedia.org/wiki/InkML https://www.w3.org/2002/mmi/ink https://www.w3.org/TR/InkML/ https://www.w3.org/TR/2011/REC-InkML-20110920/ InkML Toolkit - open source contribution from HP Labs, India InkML is an XML data format and a draft W3C standard for platform and device-neutral representation of digital ink data that is input with an electronic pen or stylus. InkML Toolkit (InkMLTk) is targeted at providing a suite of tools for working with InkML documents. The toolkit includes InkML processor libraries implementing the W3C InkML specification and different kind of tools such as Converters (to and from other ink and image formats), InkML viewers including browser plug-ins, and InkML applications such as a graphical editor. InkML Toolkit is brought to you by HP Labs India. https://inkmltk.sourceforge.net/ https://web.archive.org/web/20020307044715/ http://www.hpl.hp.com/india/ ISF Ink Serialized Format (ISF) is a Microsoft format to store written ink information. The format is mainly used for mobile devices like Personal digital assistants, tablet PCs and Ultra-Mobile PCs to store data entered with a stylus. https://en.wikipedia.org/wiki/Ink_Serialized_Format https://learn.microsoft.com/en-us/windows/win32/tablet/ink-serialization-sample https://learn.microsoft.com/en-us/uwp/specifications/ink-serialized-format https://download.microsoft.com/download/0/B/E/0BE8BDD7-E5E8-422A-ABFD-4342ED7AD886/InkSerializedFormat(ISF)Specification.pdf WILL (.will) https://cdn.wacom.com/u/marketplace/INK-SDK/will/170801_WILL_Data_Format_Spec.pdf https://developer-docs.wacom.com/sdk-for-ink/docs/encoding/ http://developer-docs.wacom.com/sdk-for-ink/docs/overview/ http://developer-docs.wacom.com/sdk-for-ink/docs/model/ https://developer-docs.wacom.com/sdk-for-ink/docs/model/assets/will3/diagram/uim-uml-all-v9.png Conversion http://forum.wacom.eu/viewtopic.php?f=9&t=4584 WILL to SVG https://github.com/Wyess/will2svg https://github.com/ngmsoftware/will2svg ISF to InkML https://stackoverflow.com/questions/7104169/handling-ink-in-microsoft-ink-sdk https://sourceforge.net/projects/inkmltk/ The Bamboo Spark The Bamboo Spark app creates WILL (Wacom Ink Language Layer) files which can be exported as JPG, PDF or WILL files. https://support.wacom.com/hc/en-us/articles/1500006342662-Which-file-formats-does-the-app-support-","title":"Stylus Supported File Formats"},{"location":"stylus-supported-file-formats/#stylus-supported-file-formats","text":"Stylus supported applications have feature to save drawn result into specific file format. File format can be reused in other applications and transformed into other file formats.","title":"Stylus Supported File Formats"},{"location":"stylus-supported-file-formats/#inkml-applicationinkmlxml-ink-inkml","text":"InkML is an XML data format for representing digital ink data that is input with an electronic pen or stylus as part of a multimodal system. In the context of the W3C Multimodal Interaction Framework, the markup provides a format for: transferring digital ink data between devices and software components storing hand-input traces for: Handwriting recognition (including text, mathematics, chemistry) Signature verification Gesture interpretation https://www.w3.org/2002/mmi/ink https://en.wikipedia.org/wiki/InkML https://www.w3.org/2002/mmi/ink https://www.w3.org/TR/InkML/ https://www.w3.org/TR/2011/REC-InkML-20110920/","title":"InkML (\"application/inkml+xml\", .ink, .inkml)"},{"location":"stylus-supported-file-formats/#inkml-toolkit-open-source-contribution-from-hp-labs-india","text":"InkML is an XML data format and a draft W3C standard for platform and device-neutral representation of digital ink data that is input with an electronic pen or stylus. InkML Toolkit (InkMLTk) is targeted at providing a suite of tools for working with InkML documents. The toolkit includes InkML processor libraries implementing the W3C InkML specification and different kind of tools such as Converters (to and from other ink and image formats), InkML viewers including browser plug-ins, and InkML applications such as a graphical editor. InkML Toolkit is brought to you by HP Labs India. https://inkmltk.sourceforge.net/ https://web.archive.org/web/20020307044715/ http://www.hpl.hp.com/india/","title":"InkML Toolkit - open source contribution from HP Labs, India"},{"location":"stylus-supported-file-formats/#isf","text":"Ink Serialized Format (ISF) is a Microsoft format to store written ink information. The format is mainly used for mobile devices like Personal digital assistants, tablet PCs and Ultra-Mobile PCs to store data entered with a stylus. https://en.wikipedia.org/wiki/Ink_Serialized_Format https://learn.microsoft.com/en-us/windows/win32/tablet/ink-serialization-sample https://learn.microsoft.com/en-us/uwp/specifications/ink-serialized-format https://download.microsoft.com/download/0/B/E/0BE8BDD7-E5E8-422A-ABFD-4342ED7AD886/InkSerializedFormat(ISF)Specification.pdf","title":"ISF"},{"location":"stylus-supported-file-formats/#will-will","text":"https://cdn.wacom.com/u/marketplace/INK-SDK/will/170801_WILL_Data_Format_Spec.pdf https://developer-docs.wacom.com/sdk-for-ink/docs/encoding/ http://developer-docs.wacom.com/sdk-for-ink/docs/overview/ http://developer-docs.wacom.com/sdk-for-ink/docs/model/ https://developer-docs.wacom.com/sdk-for-ink/docs/model/assets/will3/diagram/uim-uml-all-v9.png","title":"WILL (.will)"},{"location":"stylus-supported-file-formats/#conversion","text":"http://forum.wacom.eu/viewtopic.php?f=9&t=4584","title":"Conversion"},{"location":"stylus-supported-file-formats/#will-to-svg","text":"https://github.com/Wyess/will2svg https://github.com/ngmsoftware/will2svg","title":"WILL to SVG"},{"location":"stylus-supported-file-formats/#isf-to-inkml","text":"https://stackoverflow.com/questions/7104169/handling-ink-in-microsoft-ink-sdk https://sourceforge.net/projects/inkmltk/","title":"ISF to InkML"},{"location":"stylus-supported-file-formats/#the-bamboo-spark","text":"The Bamboo Spark app creates WILL (Wacom Ink Language Layer) files which can be exported as JPG, PDF or WILL files. https://support.wacom.com/hc/en-us/articles/1500006342662-Which-file-formats-does-the-app-support-","title":"The Bamboo Spark"},{"location":"terminology/","text":"Terminology Sayre's paradox Sayre's paradox is a dilemma encountered in the design of automated handwriting recognition systems. A standard statement of the paradox is that a cursively written word cannot be recognized without being segmented and cannot be segmented without being recognized. The paradox was first articulated in a 1973 publication by Kenneth M. Sayre, after whom it was named. Wikipedia article A project beginning with publication of the author's book Recognition in 1965 has resulted in a cursive script recognition program which has correctly identified 79 per cent of a test sample of 84 words. This program makes no use of information about sequence of stroke inscription, and segments the cursive line as part of the recognition procedure. It thus compares favorably in performance level with previously reported programs appropriately \u201cnormalized\u201d, while not requiring input pertaining to stroke sequence and stroke segmentation that is essential to these other programs. Book Ballistic stroke In handwriting research, the concept of stroke is used in various ways. In engineering and computer science, there is a tendency to use the term stroke for a single connected component of ink (in Off-line handwriting recognition) or a complete pen-down trace (in on-line handwriting recognition). Thus, such stroke may be a complete character or a part of a character. However, in this definition, a complete word written as connected cursive script should also be called a stroke. This is in conflict with the suggested unitary nature of stroke as a relatively simple shape. In the research field of handwriting motor control, the term ballistic stroke is used. It is defined as the trajectory segment between two consecutive minima in the absolute velocity of the pen tip. The time delay between the cortical brain command and a muscle contraction is so large that the 100 millisecond ballistic strokes need to be planned in advance by the brain, as feedback by hand-eye coordination requires a much slower movement than is the case in the normal handwriting process. Wikipedia article Segment A segment of handwriting is a piece of the pen-tip trajectory between two defined segmentation points. If the occurrence of a minimum in the absolute (tangential) velocity is used as a heuristic for segmentation, the pen-tip trajectory can be subdivided into segments corresponding to ballistic strokes. In handwriting recognition or optical character recognition, other terminologies may be used, such as the term glyph for a non-character (i.e.: sub character or multi-character) pattern. Wikipedia article Graphonomics Graphonomics is the interdisciplinary field directed towards the scientific analysis of the handwriting process, product, and other graphic skills. Researchers in handwriting recognition, forensic handwriting examination, kinesiology, psychology, computer science, artificial intelligence, paleography and neuroscience cooperate in order to achieve a better understanding of the human skill of handwriting. Research in graphonomics generally involves handwriting movement analysis in one form or another. Wikipedia article Terminology in graphonomics Graphology Graphology is the analysis of handwriting with attempt to determine someone's personality traits. No scientific evidence exists to support graphology, and it is generally considered a pseudoscience or scientifically questionable practice. Wikipedia article Shelia Guberman The common approach to computer handwriting recognition was computer learning on a set of examples (characters or words) presented as visual objects. Guberman proposed that it is more adequate for the psycho-physiology of human perception to present the script as a kinematic object, a gesture, i.e. synergy of movements of the stylus producing the script. The handwriting consists of 7 primitives. The variations, which characters undergo during the writing, are restricted by the rule: each element can be transformed only into his neighbor in the ordered sequence of primitives. During the evolution of Latin-like writing acquired resistance to natural variations in character shape: when one of the primitives is substituted by his neighbor the interpretation of the character does not change to another one. Based on this approach two USA companies Paragraph and Parascript developed the first commercial products for on-line and off-line free handwriting recognition, which were licensed by Apple, Microsoft, Boeing, Siemens and others. \"Most commercially available natural handwriting software is based on ParaGraph or Parascript technology\u201d. The hypothesis that humans perceive the handwriting as well as other linear drawings (in general \u2013 the communication signals) not in visual modality but in the motor modality was later confirmed by the discovery of mirror neurons. The difference is that in the classical mirroring phenomena the motor response appears in parallel with the observed movement (\u201cimmediate action perception\u201d), and during the handwriting recognition the static stimulus is transformed into a time process by tracing the path of the pen on the paper. In both cases the observer is trying to understand the intention of the correspondent: \u201cthe understanding of what the person is doing and why he is doing it, is acquired through a mechanism that directly transforms visual information into a motor format\u201d. Shelia Guberman ALGORITHM FOR RECOGNITION OF HANDWRITTEN TEXTS paper ParaScript Homepage ParaScript Company & History Handwriting recognition Handwriting recognition (HWR), also known as handwritten text recognition (HTR), is the ability of a computer to receive and interpret intelligible handwritten input from sources such as paper documents, photographs, touch-screens and other devices. The image of the written text may be sensed \"off line\" from a piece of paper by optical scanning (optical character recognition) or intelligent word recognition. Alternatively, the movements of the pen tip may be sensed \"on line\", for example by a pen-based computer screen surface, a generally easier task as there are more clues available. A handwriting recognition system handles formatting, performs correct segmentation into characters, and finds the most plausible words. Wikipedia article","title":"Terminology"},{"location":"terminology/#terminology","text":"","title":"Terminology"},{"location":"terminology/#sayres-paradox","text":"Sayre's paradox is a dilemma encountered in the design of automated handwriting recognition systems. A standard statement of the paradox is that a cursively written word cannot be recognized without being segmented and cannot be segmented without being recognized. The paradox was first articulated in a 1973 publication by Kenneth M. Sayre, after whom it was named. Wikipedia article A project beginning with publication of the author's book Recognition in 1965 has resulted in a cursive script recognition program which has correctly identified 79 per cent of a test sample of 84 words. This program makes no use of information about sequence of stroke inscription, and segments the cursive line as part of the recognition procedure. It thus compares favorably in performance level with previously reported programs appropriately \u201cnormalized\u201d, while not requiring input pertaining to stroke sequence and stroke segmentation that is essential to these other programs. Book","title":"Sayre's paradox"},{"location":"terminology/#ballistic-stroke","text":"In handwriting research, the concept of stroke is used in various ways. In engineering and computer science, there is a tendency to use the term stroke for a single connected component of ink (in Off-line handwriting recognition) or a complete pen-down trace (in on-line handwriting recognition). Thus, such stroke may be a complete character or a part of a character. However, in this definition, a complete word written as connected cursive script should also be called a stroke. This is in conflict with the suggested unitary nature of stroke as a relatively simple shape. In the research field of handwriting motor control, the term ballistic stroke is used. It is defined as the trajectory segment between two consecutive minima in the absolute velocity of the pen tip. The time delay between the cortical brain command and a muscle contraction is so large that the 100 millisecond ballistic strokes need to be planned in advance by the brain, as feedback by hand-eye coordination requires a much slower movement than is the case in the normal handwriting process. Wikipedia article","title":"Ballistic stroke"},{"location":"terminology/#segment","text":"A segment of handwriting is a piece of the pen-tip trajectory between two defined segmentation points. If the occurrence of a minimum in the absolute (tangential) velocity is used as a heuristic for segmentation, the pen-tip trajectory can be subdivided into segments corresponding to ballistic strokes. In handwriting recognition or optical character recognition, other terminologies may be used, such as the term glyph for a non-character (i.e.: sub character or multi-character) pattern. Wikipedia article","title":"Segment"},{"location":"terminology/#graphonomics","text":"Graphonomics is the interdisciplinary field directed towards the scientific analysis of the handwriting process, product, and other graphic skills. Researchers in handwriting recognition, forensic handwriting examination, kinesiology, psychology, computer science, artificial intelligence, paleography and neuroscience cooperate in order to achieve a better understanding of the human skill of handwriting. Research in graphonomics generally involves handwriting movement analysis in one form or another. Wikipedia article Terminology in graphonomics","title":"Graphonomics"},{"location":"terminology/#graphology","text":"Graphology is the analysis of handwriting with attempt to determine someone's personality traits. No scientific evidence exists to support graphology, and it is generally considered a pseudoscience or scientifically questionable practice. Wikipedia article","title":"Graphology"},{"location":"terminology/#shelia-guberman","text":"The common approach to computer handwriting recognition was computer learning on a set of examples (characters or words) presented as visual objects. Guberman proposed that it is more adequate for the psycho-physiology of human perception to present the script as a kinematic object, a gesture, i.e. synergy of movements of the stylus producing the script. The handwriting consists of 7 primitives. The variations, which characters undergo during the writing, are restricted by the rule: each element can be transformed only into his neighbor in the ordered sequence of primitives. During the evolution of Latin-like writing acquired resistance to natural variations in character shape: when one of the primitives is substituted by his neighbor the interpretation of the character does not change to another one. Based on this approach two USA companies Paragraph and Parascript developed the first commercial products for on-line and off-line free handwriting recognition, which were licensed by Apple, Microsoft, Boeing, Siemens and others. \"Most commercially available natural handwriting software is based on ParaGraph or Parascript technology\u201d. The hypothesis that humans perceive the handwriting as well as other linear drawings (in general \u2013 the communication signals) not in visual modality but in the motor modality was later confirmed by the discovery of mirror neurons. The difference is that in the classical mirroring phenomena the motor response appears in parallel with the observed movement (\u201cimmediate action perception\u201d), and during the handwriting recognition the static stimulus is transformed into a time process by tracing the path of the pen on the paper. In both cases the observer is trying to understand the intention of the correspondent: \u201cthe understanding of what the person is doing and why he is doing it, is acquired through a mechanism that directly transforms visual information into a motor format\u201d. Shelia Guberman ALGORITHM FOR RECOGNITION OF HANDWRITTEN TEXTS paper ParaScript Homepage ParaScript Company & History","title":"Shelia Guberman"},{"location":"terminology/#handwriting-recognition","text":"Handwriting recognition (HWR), also known as handwritten text recognition (HTR), is the ability of a computer to receive and interpret intelligible handwritten input from sources such as paper documents, photographs, touch-screens and other devices. The image of the written text may be sensed \"off line\" from a piece of paper by optical scanning (optical character recognition) or intelligent word recognition. Alternatively, the movements of the pen tip may be sensed \"on line\", for example by a pen-based computer screen surface, a generally easier task as there are more clues available. A handwriting recognition system handles formatting, performs correct segmentation into characters, and finds the most plausible words. Wikipedia article","title":"Handwriting recognition"},{"location":"timelines/","text":"Timeline 1989 GRiDPad was a trademarked name for a series of pen computing tablets built by Grid Systems Corporation. The GRiDPad 1900, released in 1989, is regarded as the first commercially successful tablet computer. 1991 Ronjon Nag made First selling cursive handwriting recognition with Lexicus, 1991 (Longhand program?) 1992 Ronjon Nag co-founded the technology company Lexicus in Palo Alto, California 1993 The Unistrokes technology was invented at the Palo Alto Research Center (PARC) by David Goldberg in 1993. Motorola acquired Lexicus 1996 The first Palm device, the PalmPilot 1000, was released 2003 \"Graffiti 2 Powered by Jot\" was introduced in 2003 2005 ACCESS Co., Ltd. of Japan acquired the rights to Graffiti when it acquired PalmSource, Inc. in 2005. 2007 the $1 unistroke recognizer algorithm 2008 InkML Toolkit initial release 2019 Universal stylus initiative certified products started coming to market in 2019 Read more https://en.wikipedia.org/wiki/GRiDPad https://en.wikipedia.org/wiki/Palm_(PDA) https://www.r42group.com/dr-ronjon-nag https://en.wikipedia.org/wiki/Ronjon_Nag https://archive.fortune.com/magazines/fortune/fortune_archive/1993/09/06/78275/index.htm","title":"Timeline"},{"location":"timelines/#timeline","text":"","title":"Timeline"},{"location":"timelines/#1989","text":"GRiDPad was a trademarked name for a series of pen computing tablets built by Grid Systems Corporation. The GRiDPad 1900, released in 1989, is regarded as the first commercially successful tablet computer.","title":"1989"},{"location":"timelines/#1991","text":"Ronjon Nag made First selling cursive handwriting recognition with Lexicus, 1991 (Longhand program?)","title":"1991"},{"location":"timelines/#1992","text":"Ronjon Nag co-founded the technology company Lexicus in Palo Alto, California","title":"1992"},{"location":"timelines/#1993","text":"The Unistrokes technology was invented at the Palo Alto Research Center (PARC) by David Goldberg in 1993. Motorola acquired Lexicus","title":"1993"},{"location":"timelines/#1996","text":"The first Palm device, the PalmPilot 1000, was released","title":"1996"},{"location":"timelines/#2003","text":"\"Graffiti 2 Powered by Jot\" was introduced in 2003","title":"2003"},{"location":"timelines/#2005","text":"ACCESS Co., Ltd. of Japan acquired the rights to Graffiti when it acquired PalmSource, Inc. in 2005.","title":"2005"},{"location":"timelines/#2007","text":"the $1 unistroke recognizer algorithm","title":"2007"},{"location":"timelines/#2008","text":"InkML Toolkit initial release","title":"2008"},{"location":"timelines/#2019","text":"Universal stylus initiative certified products started coming to market in 2019 Read more https://en.wikipedia.org/wiki/GRiDPad https://en.wikipedia.org/wiki/Palm_(PDA) https://www.r42group.com/dr-ronjon-nag https://en.wikipedia.org/wiki/Ronjon_Nag https://archive.fortune.com/magazines/fortune/fortune_archive/1993/09/06/78275/index.htm","title":"2019"},{"location":"tools/","text":"Tools Microsoft Apple IPadOS Apple Scribble Apple Scribble does not support comma or other puncutation. Forum post Support guide Language support MyScript Homepage Notes Recognition is limited to single language Recognized languages are added by the time Support for the mixed text and shapes exist, but even then for one language at the time","title":"Tools"},{"location":"tools/#tools","text":"","title":"Tools"},{"location":"tools/#microsoft","text":"","title":"Microsoft"},{"location":"tools/#apple","text":"","title":"Apple"},{"location":"tools/#ipados","text":"","title":"IPadOS"},{"location":"tools/#apple-scribble","text":"Apple Scribble does not support comma or other puncutation. Forum post Support guide Language support","title":"Apple Scribble"},{"location":"tools/#myscript","text":"Homepage","title":"MyScript"},{"location":"tools/#notes","text":"Recognition is limited to single language Recognized languages are added by the time Support for the mixed text and shapes exist, but even then for one language at the time","title":"Notes"},{"location":"unistroke-recognition/","text":"Unistroke Recognizer Graffiti https://en.wikipedia.org/wiki/Graffiti_(Palm_OS) https://en.wikipedia.org/wiki/Graffiti_2 The $1 Unistroke Recognizer The $1 Unistroke Recognizer is a 2-D single-stroke recognizer designed for rapid prototyping of gesture-based user interfaces. In machine learning terms, $1 is an instance-based nearest-neighbor classifier with a 2-D Euclidean distance function, i.e., a geometric template matcher. https://depts.washington.edu/acelab/proj/dollar/impact.html http://faculty.washington.edu/wobbrock/pubs/uist-07.01.pdf https://fewlinesofcode.com/swift,/ios,/gesture_recognizer,/$1/2019/05/13/dollar-one-unistroke-recognizer.html","title":"Unistroke Recognizer"},{"location":"unistroke-recognition/#unistroke-recognizer","text":"","title":"Unistroke Recognizer"},{"location":"unistroke-recognition/#graffiti","text":"https://en.wikipedia.org/wiki/Graffiti_(Palm_OS) https://en.wikipedia.org/wiki/Graffiti_2","title":"Graffiti"},{"location":"unistroke-recognition/#the-1-unistroke-recognizer","text":"The $1 Unistroke Recognizer is a 2-D single-stroke recognizer designed for rapid prototyping of gesture-based user interfaces. In machine learning terms, $1 is an instance-based nearest-neighbor classifier with a 2-D Euclidean distance function, i.e., a geometric template matcher. https://depts.washington.edu/acelab/proj/dollar/impact.html http://faculty.washington.edu/wobbrock/pubs/uist-07.01.pdf https://fewlinesofcode.com/swift,/ios,/gesture_recognizer,/$1/2019/05/13/dollar-one-unistroke-recognizer.html","title":"The $1 Unistroke Recognizer"},{"location":"universal-stylus-initiative/","text":"Universal Stylus Initiative The Universal Stylus Initiative (USI) is a non-profit alliance of companies promoting a proprietary technical standard for interoperable active pen styluses on touchscreen devices such as phones, tablets, and computers. Wikipedia Certification FAQS Join USI Members USI Certified Products","title":"Universal Stylus Initiative"},{"location":"universal-stylus-initiative/#universal-stylus-initiative","text":"The Universal Stylus Initiative (USI) is a non-profit alliance of companies promoting a proprietary technical standard for interoperable active pen styluses on touchscreen devices such as phones, tablets, and computers. Wikipedia Certification FAQS Join USI Members USI Certified Products","title":"Universal Stylus Initiative"}]}