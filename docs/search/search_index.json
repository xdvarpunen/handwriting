{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Home This doc includes information related to handwriting as tool. Journey I am building handwriting recognition from scratch. While working on it looking around and finding the answer what is the challenge in making working handwriting recognition. Implementations First implementation is about having lines passing through circles in a defined size of a box. If all circles are passed then handwriting is recognized as that symbol. This worked with three different numbers (0,1,2), but after that recognition required order due to overlapping lines. On first implementation I am using just HTML file. Second implementation uses snap to grid functionality. Instead of having recognition areas that need to pass through the user is helped to always get certain locations set. This way order is simple to define and recognizing numbers from 0 to 9 was done. This implementation does not scale further due to lacking amount of points. Handwriting recognition demo that supports through snap to grid functionality 0-9 number recognition. On second implementation I am still using just HTML file. Third implementation is handwriting on canvas. No restricting areas beside canvas. Line strokes are recognized to be certain type. Intersecting lines are grouped together. Stroke groups are recognized as letters. There was trouble with differentiating line corner and line curve. Third implementation recognized roughly 5 or more letters. Demo incoming . On third implementation I moved to TypeScript due to size of the application. The third implementation gave idea to create tool that could facilitate creating rules and features for the handwriting recognition. Tool is built using Python and Tkinter. Fourth implementation is ongoing. In this implementation line curve and line corner is solved. More written here when get it done. Figured out the difference between corner and curve by using two additional lines. Comparing the right line and left line of the line drawn finding the intersection can be used to define curves. When lines of the left and right don't intersect then it is corner. Below example the dots show the intersection points of the left and right line of the drawn line. Notice how letter 'L' has no intersection. Fourth implementation worked with full set of alphabet characters (Stone Optimized Shorthand). Demo below: Added character set management web application to reduce work on memorizing how to draw characters especially when developing custom ones . Continuing to develop more features than just alphabet characters. Additional features will be numbers, punctuation, space and different character set.","title":"Home"},{"location":"#home","text":"This doc includes information related to handwriting as tool.","title":"Home"},{"location":"#journey","text":"I am building handwriting recognition from scratch. While working on it looking around and finding the answer what is the challenge in making working handwriting recognition.","title":"Journey"},{"location":"#implementations","text":"First implementation is about having lines passing through circles in a defined size of a box. If all circles are passed then handwriting is recognized as that symbol. This worked with three different numbers (0,1,2), but after that recognition required order due to overlapping lines. On first implementation I am using just HTML file. Second implementation uses snap to grid functionality. Instead of having recognition areas that need to pass through the user is helped to always get certain locations set. This way order is simple to define and recognizing numbers from 0 to 9 was done. This implementation does not scale further due to lacking amount of points. Handwriting recognition demo that supports through snap to grid functionality 0-9 number recognition. On second implementation I am still using just HTML file. Third implementation is handwriting on canvas. No restricting areas beside canvas. Line strokes are recognized to be certain type. Intersecting lines are grouped together. Stroke groups are recognized as letters. There was trouble with differentiating line corner and line curve. Third implementation recognized roughly 5 or more letters. Demo incoming . On third implementation I moved to TypeScript due to size of the application. The third implementation gave idea to create tool that could facilitate creating rules and features for the handwriting recognition. Tool is built using Python and Tkinter. Fourth implementation is ongoing. In this implementation line curve and line corner is solved. More written here when get it done. Figured out the difference between corner and curve by using two additional lines. Comparing the right line and left line of the line drawn finding the intersection can be used to define curves. When lines of the left and right don't intersect then it is corner. Below example the dots show the intersection points of the left and right line of the drawn line. Notice how letter 'L' has no intersection. Fourth implementation worked with full set of alphabet characters (Stone Optimized Shorthand). Demo below: Added character set management web application to reduce work on memorizing how to draw characters especially when developing custom ones . Continuing to develop more features than just alphabet characters. Additional features will be numbers, punctuation, space and different character set.","title":"Implementations"},{"location":"characterset/","text":"Character set ASCII https://www.ascii-code.com/ https://www.ascii-code.com/timeline Early IBM computers did not support lower case letters and the names of versions of the language through FORTRAN 77 were usually spelled in all-uppercase (FORTRAN 77 was the last version in which the Fortran character set included only uppercase letters. The official language standards for Fortran have referred to the language as \"Fortran\" with initial caps since Fortran 90. https://en.wikipedia.org/wiki/Fortran#Naming https://en.wikipedia.org/wiki/Integer_BASIC No support for lowercase letters. https://en.wikipedia.org/wiki/Applesoft_BASIC Through several early models of the Apple II, Applesoft BASIC did not support the use of lowercase letters in programs, except in strings. https://www.vintagecomputing.com/index.php/archives/2833/why-the-apple-ii-didnt-support-lowercase-letters [Editor\u2019s Note: I recently asked Steve Wozniak via email about why the original Apple II did not support lowercase letters. I could have guessed the answer, but it\u2019s always good to hear the reason straight from the source. Woz\u2019s response was so long and detailed that I asked him if I could publish the whole thing on VC&G. He said yes, so here we are. \u2013Benj] So, in the end, the basic reason for no lowercase on the Apple I and Apple II was my own lack of money. Zero checking. Zero savings. https://en.wikipedia.org/wiki/Apple_I#Apple_I_character_set Apple 1 Character set contained uppercase characters, numbers and basic punctuation and math symbols. 0 1 2 3 4 5 6 7 8 9 A B C D E F 0x @ A B C D E F G H I J K L M N O 1x P Q R S T U V W X Y Z [ \\ ] ^ _ 2x ! \" # $ % & ' ( ) * + , - . / 3x 0 1 2 3 4 5 6 7 8 9 : ; < = > ? https://en.wikipedia.org/wiki/Apple_II The video controller displayed 24 lines by 40 columns of monochrome, uppercase-only text on the screen (the original character set matches ASCII characters 20h to 5Fh), with NTSC composite video output suitable for display on a TV monitor or on a regular TV set (by way of a separate RF modulator). https://retrocomputing.stackexchange.com/questions/23802/when-did-assembly-source-code-begin-to-be-written-in-lowercase https://www.quora.com/Why-do-FORTRAN-and-COBOL-use-capital-letter-for-the-commands-which-is-so-hard-to-read https://www.quora.com/When-was-it-common-for-personal-computers-to-only-recognize-all-caps Personal computers came along somewhat later (beginning in the 1970s) but had the same early constraints of cost and available memory as did early mainframes. The first generation of personal computers (including Commodore and Apple II) accordingly had restricted character sets with only upper case letters. But with the advent of the IBM PC (early 1980s) and Macintosh (mid 1980s) their designs included full 8-bit bytes, based on their Intel and Motorola processors, respectively, allowing full access to upper and lower case alphabets. Lowercase letters were added to computers in 1967, forming the US-ASCII character set First, the term ASCII is overloaded, and that leads to confusion. 7-bit ASCII only includes 128 characters (00-7F or 0-127 in decimal). 7-bit ASCII is also sometimes referred to as US-ASCII. UTF-8 encoding uses the same encoding as 7-bit ASCII for its first 128 characters. So a text file that only contains characters from that range of the first 128 characters will be identical at a byte level whether encoded with UTF-8 or 7-bit ASCII. https://stackoverflow.com/questions/11303405/force-encode-from-us-ascii-to-utf-8-iconv#:~:text=First%2C%20the%20term%20ASCII%20is,referred%20to%20as%20US%2DASCII. https://theasciicode.com.ar/ascii-printable-characters/lowercase-letter-a-minuscule-ascii-code-97.html https://man7.org/linux/man-pages/man7/ascii.7.html https://stackoverflow.com/questions/23637266/why-all-command-in-bash-are-in-lowercase https://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap12.html#tag_12_02 https://ethw.org/ASCII Unicode https://home.unicode.org/ https://home.unicode.org/about-unicode/ Unicode was released 1991 Java was first popular programming language to support unicode from ground up 1995 Perl added support later in 1998 https://stackoverflow.com/questions/1416215/which-programming-languages-were-designed-with-unicode-support-from-the-beginnin https://softwareengineering.stackexchange.com/questions/402915/what-was-the-first-language-to-allow-unicode-in-function-names Keyboard https://en.wikipedia.org/wiki/Computer_keyboard Replacing early punched cards and paper tape technology, interaction via teleprinter-style keyboards have been the main input method for computers since the 1970s, supplemented by the computer mouse since the 1980s. Multiple layouts It is possible to install multiple keyboard layouts within an operating system and switch between them, either through features implemented within the OS, or through an external application. Microsoft Windows,[33] Linux,[34] and Mac[35] provide support to add keyboard layouts and choose from them. https://en.wikipedia.org/wiki/Keyboard_layout https://en.wikipedia.org/wiki/Computer_keyboard#Physical_injury","title":"Character set"},{"location":"characterset/#character-set","text":"","title":"Character set"},{"location":"characterset/#ascii","text":"https://www.ascii-code.com/ https://www.ascii-code.com/timeline Early IBM computers did not support lower case letters and the names of versions of the language through FORTRAN 77 were usually spelled in all-uppercase (FORTRAN 77 was the last version in which the Fortran character set included only uppercase letters. The official language standards for Fortran have referred to the language as \"Fortran\" with initial caps since Fortran 90. https://en.wikipedia.org/wiki/Fortran#Naming https://en.wikipedia.org/wiki/Integer_BASIC No support for lowercase letters. https://en.wikipedia.org/wiki/Applesoft_BASIC Through several early models of the Apple II, Applesoft BASIC did not support the use of lowercase letters in programs, except in strings. https://www.vintagecomputing.com/index.php/archives/2833/why-the-apple-ii-didnt-support-lowercase-letters [Editor\u2019s Note: I recently asked Steve Wozniak via email about why the original Apple II did not support lowercase letters. I could have guessed the answer, but it\u2019s always good to hear the reason straight from the source. Woz\u2019s response was so long and detailed that I asked him if I could publish the whole thing on VC&G. He said yes, so here we are. \u2013Benj] So, in the end, the basic reason for no lowercase on the Apple I and Apple II was my own lack of money. Zero checking. Zero savings. https://en.wikipedia.org/wiki/Apple_I#Apple_I_character_set Apple 1 Character set contained uppercase characters, numbers and basic punctuation and math symbols. 0 1 2 3 4 5 6 7 8 9 A B C D E F 0x @ A B C D E F G H I J K L M N O 1x P Q R S T U V W X Y Z [ \\ ] ^ _ 2x ! \" # $ % & ' ( ) * + , - . / 3x 0 1 2 3 4 5 6 7 8 9 : ; < = > ? https://en.wikipedia.org/wiki/Apple_II The video controller displayed 24 lines by 40 columns of monochrome, uppercase-only text on the screen (the original character set matches ASCII characters 20h to 5Fh), with NTSC composite video output suitable for display on a TV monitor or on a regular TV set (by way of a separate RF modulator). https://retrocomputing.stackexchange.com/questions/23802/when-did-assembly-source-code-begin-to-be-written-in-lowercase https://www.quora.com/Why-do-FORTRAN-and-COBOL-use-capital-letter-for-the-commands-which-is-so-hard-to-read https://www.quora.com/When-was-it-common-for-personal-computers-to-only-recognize-all-caps Personal computers came along somewhat later (beginning in the 1970s) but had the same early constraints of cost and available memory as did early mainframes. The first generation of personal computers (including Commodore and Apple II) accordingly had restricted character sets with only upper case letters. But with the advent of the IBM PC (early 1980s) and Macintosh (mid 1980s) their designs included full 8-bit bytes, based on their Intel and Motorola processors, respectively, allowing full access to upper and lower case alphabets. Lowercase letters were added to computers in 1967, forming the US-ASCII character set First, the term ASCII is overloaded, and that leads to confusion. 7-bit ASCII only includes 128 characters (00-7F or 0-127 in decimal). 7-bit ASCII is also sometimes referred to as US-ASCII. UTF-8 encoding uses the same encoding as 7-bit ASCII for its first 128 characters. So a text file that only contains characters from that range of the first 128 characters will be identical at a byte level whether encoded with UTF-8 or 7-bit ASCII. https://stackoverflow.com/questions/11303405/force-encode-from-us-ascii-to-utf-8-iconv#:~:text=First%2C%20the%20term%20ASCII%20is,referred%20to%20as%20US%2DASCII. https://theasciicode.com.ar/ascii-printable-characters/lowercase-letter-a-minuscule-ascii-code-97.html https://man7.org/linux/man-pages/man7/ascii.7.html https://stackoverflow.com/questions/23637266/why-all-command-in-bash-are-in-lowercase https://pubs.opengroup.org/onlinepubs/009695399/basedefs/xbd_chap12.html#tag_12_02 https://ethw.org/ASCII","title":"ASCII"},{"location":"characterset/#unicode","text":"https://home.unicode.org/ https://home.unicode.org/about-unicode/ Unicode was released 1991 Java was first popular programming language to support unicode from ground up 1995 Perl added support later in 1998 https://stackoverflow.com/questions/1416215/which-programming-languages-were-designed-with-unicode-support-from-the-beginnin https://softwareengineering.stackexchange.com/questions/402915/what-was-the-first-language-to-allow-unicode-in-function-names","title":"Unicode"},{"location":"characterset/#keyboard","text":"https://en.wikipedia.org/wiki/Computer_keyboard Replacing early punched cards and paper tape technology, interaction via teleprinter-style keyboards have been the main input method for computers since the 1970s, supplemented by the computer mouse since the 1980s. Multiple layouts It is possible to install multiple keyboard layouts within an operating system and switch between them, either through features implemented within the OS, or through an external application. Microsoft Windows,[33] Linux,[34] and Mac[35] provide support to add keyboard layouts and choose from them. https://en.wikipedia.org/wiki/Keyboard_layout https://en.wikipedia.org/wiki/Computer_keyboard#Physical_injury","title":"Keyboard"},{"location":"papers/","text":"Papers Papers related to handwriting recognition can be found in following sources Semantic Scholar ScienceDirect Academia Google Scholar","title":"Papers"},{"location":"papers/#papers","text":"Papers related to handwriting recognition can be found in following sources Semantic Scholar ScienceDirect Academia Google Scholar","title":"Papers"},{"location":"stylus-supported-file-formats/","text":"Stylus Supported File Formats Stylus supported applications have feature to save drawn result into specific file format. File format can be reused in other applications and transformed into other file formats. InkML (\"application/inkml+xml\", .ink, .inkml) InkML is an XML data format for representing digital ink data that is input with an electronic pen or stylus as part of a multimodal system. In the context of the W3C Multimodal Interaction Framework, the markup provides a format for: transferring digital ink data between devices and software components storing hand-input traces for: Handwriting recognition (including text, mathematics, chemistry) Signature verification Gesture interpretation https://www.w3.org/2002/mmi/ink https://en.wikipedia.org/wiki/InkML https://www.w3.org/2002/mmi/ink https://www.w3.org/TR/InkML/ https://www.w3.org/TR/2011/REC-InkML-20110920/ InkML Toolkit - open source contribution from HP Labs, India InkML is an XML data format and a draft W3C standard for platform and device-neutral representation of digital ink data that is input with an electronic pen or stylus. InkML Toolkit (InkMLTk) is targeted at providing a suite of tools for working with InkML documents. The toolkit includes InkML processor libraries implementing the W3C InkML specification and different kind of tools such as Converters (to and from other ink and image formats), InkML viewers including browser plug-ins, and InkML applications such as a graphical editor. InkML Toolkit is brought to you by HP Labs India. https://inkmltk.sourceforge.net/ https://web.archive.org/web/20020307044715/ http://www.hpl.hp.com/india/ ISF Ink Serialized Format (ISF) is a Microsoft format to store written ink information. The format is mainly used for mobile devices like Personal digital assistants, tablet PCs and Ultra-Mobile PCs to store data entered with a stylus. https://en.wikipedia.org/wiki/Ink_Serialized_Format https://learn.microsoft.com/en-us/windows/win32/tablet/ink-serialization-sample https://learn.microsoft.com/en-us/uwp/specifications/ink-serialized-format https://download.microsoft.com/download/0/B/E/0BE8BDD7-E5E8-422A-ABFD-4342ED7AD886/InkSerializedFormat(ISF)Specification.pdf WILL (.will) https://cdn.wacom.com/u/marketplace/INK-SDK/will/170801_WILL_Data_Format_Spec.pdf https://developer-docs.wacom.com/sdk-for-ink/docs/encoding/ http://developer-docs.wacom.com/sdk-for-ink/docs/overview/ http://developer-docs.wacom.com/sdk-for-ink/docs/model/ https://developer-docs.wacom.com/sdk-for-ink/docs/model/assets/will3/diagram/uim-uml-all-v9.png Conversion http://forum.wacom.eu/viewtopic.php?f=9&t=4584 WILL to SVG https://github.com/Wyess/will2svg https://github.com/ngmsoftware/will2svg ISF to InkML https://stackoverflow.com/questions/7104169/handling-ink-in-microsoft-ink-sdk https://sourceforge.net/projects/inkmltk/ The Bamboo Spark The Bamboo Spark app creates WILL (Wacom Ink Language Layer) files which can be exported as JPG, PDF or WILL files. https://support.wacom.com/hc/en-us/articles/1500006342662-Which-file-formats-does-the-app-support-","title":"Stylus Supported File Formats"},{"location":"stylus-supported-file-formats/#stylus-supported-file-formats","text":"Stylus supported applications have feature to save drawn result into specific file format. File format can be reused in other applications and transformed into other file formats.","title":"Stylus Supported File Formats"},{"location":"stylus-supported-file-formats/#inkml-applicationinkmlxml-ink-inkml","text":"InkML is an XML data format for representing digital ink data that is input with an electronic pen or stylus as part of a multimodal system. In the context of the W3C Multimodal Interaction Framework, the markup provides a format for: transferring digital ink data between devices and software components storing hand-input traces for: Handwriting recognition (including text, mathematics, chemistry) Signature verification Gesture interpretation https://www.w3.org/2002/mmi/ink https://en.wikipedia.org/wiki/InkML https://www.w3.org/2002/mmi/ink https://www.w3.org/TR/InkML/ https://www.w3.org/TR/2011/REC-InkML-20110920/","title":"InkML (\"application/inkml+xml\", .ink, .inkml)"},{"location":"stylus-supported-file-formats/#inkml-toolkit-open-source-contribution-from-hp-labs-india","text":"InkML is an XML data format and a draft W3C standard for platform and device-neutral representation of digital ink data that is input with an electronic pen or stylus. InkML Toolkit (InkMLTk) is targeted at providing a suite of tools for working with InkML documents. The toolkit includes InkML processor libraries implementing the W3C InkML specification and different kind of tools such as Converters (to and from other ink and image formats), InkML viewers including browser plug-ins, and InkML applications such as a graphical editor. InkML Toolkit is brought to you by HP Labs India. https://inkmltk.sourceforge.net/ https://web.archive.org/web/20020307044715/ http://www.hpl.hp.com/india/","title":"InkML Toolkit - open source contribution from HP Labs, India"},{"location":"stylus-supported-file-formats/#isf","text":"Ink Serialized Format (ISF) is a Microsoft format to store written ink information. The format is mainly used for mobile devices like Personal digital assistants, tablet PCs and Ultra-Mobile PCs to store data entered with a stylus. https://en.wikipedia.org/wiki/Ink_Serialized_Format https://learn.microsoft.com/en-us/windows/win32/tablet/ink-serialization-sample https://learn.microsoft.com/en-us/uwp/specifications/ink-serialized-format https://download.microsoft.com/download/0/B/E/0BE8BDD7-E5E8-422A-ABFD-4342ED7AD886/InkSerializedFormat(ISF)Specification.pdf","title":"ISF"},{"location":"stylus-supported-file-formats/#will-will","text":"https://cdn.wacom.com/u/marketplace/INK-SDK/will/170801_WILL_Data_Format_Spec.pdf https://developer-docs.wacom.com/sdk-for-ink/docs/encoding/ http://developer-docs.wacom.com/sdk-for-ink/docs/overview/ http://developer-docs.wacom.com/sdk-for-ink/docs/model/ https://developer-docs.wacom.com/sdk-for-ink/docs/model/assets/will3/diagram/uim-uml-all-v9.png","title":"WILL (.will)"},{"location":"stylus-supported-file-formats/#conversion","text":"http://forum.wacom.eu/viewtopic.php?f=9&t=4584","title":"Conversion"},{"location":"stylus-supported-file-formats/#will-to-svg","text":"https://github.com/Wyess/will2svg https://github.com/ngmsoftware/will2svg","title":"WILL to SVG"},{"location":"stylus-supported-file-formats/#isf-to-inkml","text":"https://stackoverflow.com/questions/7104169/handling-ink-in-microsoft-ink-sdk https://sourceforge.net/projects/inkmltk/","title":"ISF to InkML"},{"location":"stylus-supported-file-formats/#the-bamboo-spark","text":"The Bamboo Spark app creates WILL (Wacom Ink Language Layer) files which can be exported as JPG, PDF or WILL files. https://support.wacom.com/hc/en-us/articles/1500006342662-Which-file-formats-does-the-app-support-","title":"The Bamboo Spark"},{"location":"terminology/","text":"Terminology Sayre's paradox Sayre's paradox is a dilemma encountered in the design of automated handwriting recognition systems. A standard statement of the paradox is that a cursively written word cannot be recognized without being segmented and cannot be segmented without being recognized. The paradox was first articulated in a 1973 publication by Kenneth M. Sayre, after whom it was named. Wikipedia article A project beginning with publication of the author's book Recognition in 1965 has resulted in a cursive script recognition program which has correctly identified 79 per cent of a test sample of 84 words. This program makes no use of information about sequence of stroke inscription, and segments the cursive line as part of the recognition procedure. It thus compares favorably in performance level with previously reported programs appropriately \u201cnormalized\u201d, while not requiring input pertaining to stroke sequence and stroke segmentation that is essential to these other programs. Book Ballistic stroke In handwriting research, the concept of stroke is used in various ways. In engineering and computer science, there is a tendency to use the term stroke for a single connected component of ink (in Off-line handwriting recognition) or a complete pen-down trace (in on-line handwriting recognition). Thus, such stroke may be a complete character or a part of a character. However, in this definition, a complete word written as connected cursive script should also be called a stroke. This is in conflict with the suggested unitary nature of stroke as a relatively simple shape. In the research field of handwriting motor control, the term ballistic stroke is used. It is defined as the trajectory segment between two consecutive minima in the absolute velocity of the pen tip. The time delay between the cortical brain command and a muscle contraction is so large that the 100 millisecond ballistic strokes need to be planned in advance by the brain, as feedback by hand-eye coordination requires a much slower movement than is the case in the normal handwriting process. Wikipedia article Segment A segment of handwriting is a piece of the pen-tip trajectory between two defined segmentation points. If the occurrence of a minimum in the absolute (tangential) velocity is used as a heuristic for segmentation, the pen-tip trajectory can be subdivided into segments corresponding to ballistic strokes. In handwriting recognition or optical character recognition, other terminologies may be used, such as the term glyph for a non-character (i.e.: sub character or multi-character) pattern. Wikipedia article Graphonomics Graphonomics is the interdisciplinary field directed towards the scientific analysis of the handwriting process, product, and other graphic skills. Researchers in handwriting recognition, forensic handwriting examination, kinesiology, psychology, computer science, artificial intelligence, paleography and neuroscience cooperate in order to achieve a better understanding of the human skill of handwriting. Research in graphonomics generally involves handwriting movement analysis in one form or another. Wikipedia article Terminology in graphonomics Graphology Graphology is the analysis of handwriting with attempt to determine someone's personality traits. No scientific evidence exists to support graphology, and it is generally considered a pseudoscience or scientifically questionable practice. Wikipedia article Shelia Guberman The common approach to computer handwriting recognition was computer learning on a set of examples (characters or words) presented as visual objects. Guberman proposed that it is more adequate for the psycho-physiology of human perception to present the script as a kinematic object, a gesture, i.e. synergy of movements of the stylus producing the script. The handwriting consists of 7 primitives. The variations, which characters undergo during the writing, are restricted by the rule: each element can be transformed only into his neighbor in the ordered sequence of primitives. During the evolution of Latin-like writing acquired resistance to natural variations in character shape: when one of the primitives is substituted by his neighbor the interpretation of the character does not change to another one. Based on this approach two USA companies Paragraph and Parascript developed the first commercial products for on-line and off-line free handwriting recognition, which were licensed by Apple, Microsoft, Boeing, Siemens and others. \"Most commercially available natural handwriting software is based on ParaGraph or Parascript technology\u201d. The hypothesis that humans perceive the handwriting as well as other linear drawings (in general \u2013 the communication signals) not in visual modality but in the motor modality was later confirmed by the discovery of mirror neurons. The difference is that in the classical mirroring phenomena the motor response appears in parallel with the observed movement (\u201cimmediate action perception\u201d), and during the handwriting recognition the static stimulus is transformed into a time process by tracing the path of the pen on the paper. In both cases the observer is trying to understand the intention of the correspondent: \u201cthe understanding of what the person is doing and why he is doing it, is acquired through a mechanism that directly transforms visual information into a motor format\u201d. Shelia Guberman ALGORITHM FOR RECOGNITION OF HANDWRITTEN TEXTS paper ParaScript Homepage ParaScript Company & History Handwriting recognition Handwriting recognition (HWR), also known as handwritten text recognition (HTR), is the ability of a computer to receive and interpret intelligible handwritten input from sources such as paper documents, photographs, touch-screens and other devices. The image of the written text may be sensed \"off line\" from a piece of paper by optical scanning (optical character recognition) or intelligent word recognition. Alternatively, the movements of the pen tip may be sensed \"on line\", for example by a pen-based computer screen surface, a generally easier task as there are more clues available. A handwriting recognition system handles formatting, performs correct segmentation into characters, and finds the most plausible words. Wikipedia article","title":"Terminology"},{"location":"terminology/#terminology","text":"","title":"Terminology"},{"location":"terminology/#sayres-paradox","text":"Sayre's paradox is a dilemma encountered in the design of automated handwriting recognition systems. A standard statement of the paradox is that a cursively written word cannot be recognized without being segmented and cannot be segmented without being recognized. The paradox was first articulated in a 1973 publication by Kenneth M. Sayre, after whom it was named. Wikipedia article A project beginning with publication of the author's book Recognition in 1965 has resulted in a cursive script recognition program which has correctly identified 79 per cent of a test sample of 84 words. This program makes no use of information about sequence of stroke inscription, and segments the cursive line as part of the recognition procedure. It thus compares favorably in performance level with previously reported programs appropriately \u201cnormalized\u201d, while not requiring input pertaining to stroke sequence and stroke segmentation that is essential to these other programs. Book","title":"Sayre's paradox"},{"location":"terminology/#ballistic-stroke","text":"In handwriting research, the concept of stroke is used in various ways. In engineering and computer science, there is a tendency to use the term stroke for a single connected component of ink (in Off-line handwriting recognition) or a complete pen-down trace (in on-line handwriting recognition). Thus, such stroke may be a complete character or a part of a character. However, in this definition, a complete word written as connected cursive script should also be called a stroke. This is in conflict with the suggested unitary nature of stroke as a relatively simple shape. In the research field of handwriting motor control, the term ballistic stroke is used. It is defined as the trajectory segment between two consecutive minima in the absolute velocity of the pen tip. The time delay between the cortical brain command and a muscle contraction is so large that the 100 millisecond ballistic strokes need to be planned in advance by the brain, as feedback by hand-eye coordination requires a much slower movement than is the case in the normal handwriting process. Wikipedia article","title":"Ballistic stroke"},{"location":"terminology/#segment","text":"A segment of handwriting is a piece of the pen-tip trajectory between two defined segmentation points. If the occurrence of a minimum in the absolute (tangential) velocity is used as a heuristic for segmentation, the pen-tip trajectory can be subdivided into segments corresponding to ballistic strokes. In handwriting recognition or optical character recognition, other terminologies may be used, such as the term glyph for a non-character (i.e.: sub character or multi-character) pattern. Wikipedia article","title":"Segment"},{"location":"terminology/#graphonomics","text":"Graphonomics is the interdisciplinary field directed towards the scientific analysis of the handwriting process, product, and other graphic skills. Researchers in handwriting recognition, forensic handwriting examination, kinesiology, psychology, computer science, artificial intelligence, paleography and neuroscience cooperate in order to achieve a better understanding of the human skill of handwriting. Research in graphonomics generally involves handwriting movement analysis in one form or another. Wikipedia article Terminology in graphonomics","title":"Graphonomics"},{"location":"terminology/#graphology","text":"Graphology is the analysis of handwriting with attempt to determine someone's personality traits. No scientific evidence exists to support graphology, and it is generally considered a pseudoscience or scientifically questionable practice. Wikipedia article","title":"Graphology"},{"location":"terminology/#shelia-guberman","text":"The common approach to computer handwriting recognition was computer learning on a set of examples (characters or words) presented as visual objects. Guberman proposed that it is more adequate for the psycho-physiology of human perception to present the script as a kinematic object, a gesture, i.e. synergy of movements of the stylus producing the script. The handwriting consists of 7 primitives. The variations, which characters undergo during the writing, are restricted by the rule: each element can be transformed only into his neighbor in the ordered sequence of primitives. During the evolution of Latin-like writing acquired resistance to natural variations in character shape: when one of the primitives is substituted by his neighbor the interpretation of the character does not change to another one. Based on this approach two USA companies Paragraph and Parascript developed the first commercial products for on-line and off-line free handwriting recognition, which were licensed by Apple, Microsoft, Boeing, Siemens and others. \"Most commercially available natural handwriting software is based on ParaGraph or Parascript technology\u201d. The hypothesis that humans perceive the handwriting as well as other linear drawings (in general \u2013 the communication signals) not in visual modality but in the motor modality was later confirmed by the discovery of mirror neurons. The difference is that in the classical mirroring phenomena the motor response appears in parallel with the observed movement (\u201cimmediate action perception\u201d), and during the handwriting recognition the static stimulus is transformed into a time process by tracing the path of the pen on the paper. In both cases the observer is trying to understand the intention of the correspondent: \u201cthe understanding of what the person is doing and why he is doing it, is acquired through a mechanism that directly transforms visual information into a motor format\u201d. Shelia Guberman ALGORITHM FOR RECOGNITION OF HANDWRITTEN TEXTS paper ParaScript Homepage ParaScript Company & History","title":"Shelia Guberman"},{"location":"terminology/#handwriting-recognition","text":"Handwriting recognition (HWR), also known as handwritten text recognition (HTR), is the ability of a computer to receive and interpret intelligible handwritten input from sources such as paper documents, photographs, touch-screens and other devices. The image of the written text may be sensed \"off line\" from a piece of paper by optical scanning (optical character recognition) or intelligent word recognition. Alternatively, the movements of the pen tip may be sensed \"on line\", for example by a pen-based computer screen surface, a generally easier task as there are more clues available. A handwriting recognition system handles formatting, performs correct segmentation into characters, and finds the most plausible words. Wikipedia article","title":"Handwriting recognition"},{"location":"timelines/","text":"Timeline 1989 GRiDPad was a trademarked name for a series of pen computing tablets built by Grid Systems Corporation. The GRiDPad 1900, released in 1989, is regarded as the first commercially successful tablet computer. 1991 Ronjon Nag made First selling cursive handwriting recognition with Lexicus, 1991 (Longhand program?) 1992 Ronjon Nag co-founded the technology company Lexicus in Palo Alto, California 1993 The Unistrokes technology was invented at the Palo Alto Research Center (PARC) by David Goldberg in 1993. Motorola acquired Lexicus 1996 The first Palm device, the PalmPilot 1000, was released 2003 \"Graffiti 2 Powered by Jot\" was introduced in 2003 2005 ACCESS Co., Ltd. of Japan acquired the rights to Graffiti when it acquired PalmSource, Inc. in 2005. 2007 the $1 unistroke recognizer algorithm 2008 InkML Toolkit initial release 2019 Universal stylus initiative certified products started coming to market in 2019 Read more https://en.wikipedia.org/wiki/GRiDPad https://en.wikipedia.org/wiki/Palm_(PDA) https://www.r42group.com/dr-ronjon-nag https://en.wikipedia.org/wiki/Ronjon_Nag https://archive.fortune.com/magazines/fortune/fortune_archive/1993/09/06/78275/index.htm","title":"Timeline"},{"location":"timelines/#timeline","text":"","title":"Timeline"},{"location":"timelines/#1989","text":"GRiDPad was a trademarked name for a series of pen computing tablets built by Grid Systems Corporation. The GRiDPad 1900, released in 1989, is regarded as the first commercially successful tablet computer.","title":"1989"},{"location":"timelines/#1991","text":"Ronjon Nag made First selling cursive handwriting recognition with Lexicus, 1991 (Longhand program?)","title":"1991"},{"location":"timelines/#1992","text":"Ronjon Nag co-founded the technology company Lexicus in Palo Alto, California","title":"1992"},{"location":"timelines/#1993","text":"The Unistrokes technology was invented at the Palo Alto Research Center (PARC) by David Goldberg in 1993. Motorola acquired Lexicus","title":"1993"},{"location":"timelines/#1996","text":"The first Palm device, the PalmPilot 1000, was released","title":"1996"},{"location":"timelines/#2003","text":"\"Graffiti 2 Powered by Jot\" was introduced in 2003","title":"2003"},{"location":"timelines/#2005","text":"ACCESS Co., Ltd. of Japan acquired the rights to Graffiti when it acquired PalmSource, Inc. in 2005.","title":"2005"},{"location":"timelines/#2007","text":"the $1 unistroke recognizer algorithm","title":"2007"},{"location":"timelines/#2008","text":"InkML Toolkit initial release","title":"2008"},{"location":"timelines/#2019","text":"Universal stylus initiative certified products started coming to market in 2019 Read more https://en.wikipedia.org/wiki/GRiDPad https://en.wikipedia.org/wiki/Palm_(PDA) https://www.r42group.com/dr-ronjon-nag https://en.wikipedia.org/wiki/Ronjon_Nag https://archive.fortune.com/magazines/fortune/fortune_archive/1993/09/06/78275/index.htm","title":"2019"},{"location":"tools/","text":"Tools Microsoft Apple IPadOS Apple Scribble Apple Scribble does not support comma or other puncutation. Forum post Support guide Language support MyScript Homepage Notes Recognition is limited to single language Recognized languages are added by the time Support for the mixed text and shapes exist, but even then for one language at the time","title":"Tools"},{"location":"tools/#tools","text":"","title":"Tools"},{"location":"tools/#microsoft","text":"","title":"Microsoft"},{"location":"tools/#apple","text":"","title":"Apple"},{"location":"tools/#ipados","text":"","title":"IPadOS"},{"location":"tools/#apple-scribble","text":"Apple Scribble does not support comma or other puncutation. Forum post Support guide Language support","title":"Apple Scribble"},{"location":"tools/#myscript","text":"Homepage","title":"MyScript"},{"location":"tools/#notes","text":"Recognition is limited to single language Recognized languages are added by the time Support for the mixed text and shapes exist, but even then for one language at the time","title":"Notes"},{"location":"unistroke-recognition/","text":"Unistroke Recognizer Handwriting recognition based on single strokes. Graffiti https://en.wikipedia.org/wiki/Graffiti_(Palm_OS) https://en.wikipedia.org/wiki/Graffiti_2 The $1 Unistroke Recognizer The $1 Unistroke Recognizer is a 2-D single-stroke recognizer designed for rapid prototyping of gesture-based user interfaces. In machine learning terms, $1 is an instance-based nearest-neighbor classifier with a 2-D Euclidean distance function, i.e., a geometric template matcher. https://depts.washington.edu/acelab/proj/dollar/impact.html http://faculty.washington.edu/wobbrock/pubs/uist-07.01.pdf https://fewlinesofcode.com/swift,/ios,/gesture_recognizer,/$1/2019/05/13/dollar-one-unistroke-recognizer.html","title":"Unistroke Recognizer"},{"location":"unistroke-recognition/#unistroke-recognizer","text":"Handwriting recognition based on single strokes.","title":"Unistroke Recognizer"},{"location":"unistroke-recognition/#graffiti","text":"https://en.wikipedia.org/wiki/Graffiti_(Palm_OS) https://en.wikipedia.org/wiki/Graffiti_2","title":"Graffiti"},{"location":"unistroke-recognition/#the-1-unistroke-recognizer","text":"The $1 Unistroke Recognizer is a 2-D single-stroke recognizer designed for rapid prototyping of gesture-based user interfaces. In machine learning terms, $1 is an instance-based nearest-neighbor classifier with a 2-D Euclidean distance function, i.e., a geometric template matcher. https://depts.washington.edu/acelab/proj/dollar/impact.html http://faculty.washington.edu/wobbrock/pubs/uist-07.01.pdf https://fewlinesofcode.com/swift,/ios,/gesture_recognizer,/$1/2019/05/13/dollar-one-unistroke-recognizer.html","title":"The $1 Unistroke Recognizer"},{"location":"universal-stylus-initiative/","text":"Universal Stylus Initiative The Universal Stylus Initiative (USI) is a non-profit alliance of companies promoting a proprietary technical standard for interoperable active pen styluses on touchscreen devices such as phones, tablets, and computers. Wikipedia Certification FAQS Join USI Members USI Certified Products","title":"Universal Stylus Initiative"},{"location":"universal-stylus-initiative/#universal-stylus-initiative","text":"The Universal Stylus Initiative (USI) is a non-profit alliance of companies promoting a proprietary technical standard for interoperable active pen styluses on touchscreen devices such as phones, tablets, and computers. Wikipedia Certification FAQS Join USI Members USI Certified Products","title":"Universal Stylus Initiative"},{"location":"writing-and-resources/","text":"Writing and resources Each writing style has its reason why it is formed to be what it is. In this page each alphabetics are listed with their properties. In conclusion is briefly explained limiters and enablers. Stone Runic alphabets Features: straight lines, corners, lacking curves Material: stone, knife, chisel Writing: carved with a knife or chisel into stone Notes: to make writing easier only straight lines were used Clay Cuneiform Features: repeated tokens Material: clay, stick Writing: pressure by stick on clay Papyrus todo: gets broken, top lines, not smooth Hieratic Features: cursive Material: Papyrus, reed pen, ink Writing: writing in ink with a reed pen on papyrus Most often, hieratic script was written in ink with a reed brush on papyrus, wood, stone, or pottery ostraca. During the Roman period, reed pens (calami) were also used. Thousands of limestone ostraca have been found at the site of Deir al-Madinah, revealing an intimate picture of the lives of common Egyptian workers. Besides papyrus, stone, ceramic shards, and wood, there are hieratic texts on leather rolls, although few have survived. There are also hieratic texts written on cloth, especially on linen used in mummification. There are some hieratic texts inscribed on stone, a variety known as lapidary hieratic; these are particularly common on stelae from the twenty-second dynasty. During the late sixth dynasty, hieratic was sometimes incised into mud tablets with a stylus, similar to cuneiform. About five hundred of these tablets have been discovered in the governor's palace at Ayn Asil (Balat), and a single example was discovered from the site of Ayn al-Gazzarin, both in the Dakhla Oasis. At the time the tablets were made, Dakhla was located far from centers of papyrus production. These tablets record inventories, name lists, accounts, and approximately fifty letters. Of the letters, many are internal letters that were circulated within the palace and the local settlement, but others were sent from other villages in the oasis to the governor. https://en.wikipedia.org/wiki/Hieratic Demotic Features: cursive Material: Papyrus, reed pen, ink Writing: writing in ink with a reed pen on papyrus Notes: developed from Hieratic https://en.wikipedia.org/wiki/Demotic_(Egyptian) Leaf Palm leaf The text in palm leaf manuscripts was inscribed with a knife pen on rectangular cut and cured palm leaf sheets; colourings were then applied to the surface and wiped off, leaving the ink in the incised grooves. Each sheet typically had a hole through which a string could pass, and with these the sheets were tied together with a string to bind like a book. A palm leaf text thus created would typically last between a few decades and about 600 years before it decayed due to dampness, insect activity, mold and fragility. Thus the document had to be copied onto new sets of dried palm leaves. The oldest surviving palm leaf Indian manuscripts have been found in colder, drier climates such as in parts of Nepal, Tibet and central Asia, the source of 1st-millennium CE manuscripts. The round and cursive design of the letters of many South Indian and Southeast Asian scripts, such as Devanagari, Nandinagari, Kannada, Telugu, Lontara, Javanese, Balinese, Odia, Burmese, Tamil, Khmer, and so forth, may be an adaptation to the use of palm leaves, as angular letters could tear the leaves apart. https://en.wikipedia.org/wiki/Palm-leaf_manuscript Notes: word page is translated as leaf in some of these languages Bamboo Bamboo and wooden slips (simplified Chinese: \u7b80\u724d; traditional Chinese: \u7c21\u7258; pinyin: ji\u01cend\u00fa) were the main media for writing documents in China before the widespread introduction of paper during the first two centuries AD. (Silk was occasionally used, for example in the Chu Silk Manuscript, but was prohibitively expensive for most documents.) The earliest surviving examples of wood or bamboo slips date from the 5th century BC during the Warring States period. However, references in earlier texts surviving on other media make it clear that some precursor of these Warring States period bamboo slips was in use as early as the late Shang period (from about 1250 BC). Bamboo or wooden strips were the standard writing material during the Han dynasty and excavated examples have been found in abundance. Subsequently, the invention of paper by Cai Lun during the Han dynasty began to displace bamboo and wooden strips from mainstream uses, and by the 4th century AD bamboo had been largely abandoned as a medium for writing in China. The long, narrow strips of wood or bamboo typically carry a single column of brush-written text each, with space for several tens of visually complex ancient Chinese characters. Each strip of wood or bamboo is said to be as long as a chopstick and as wide as two. For longer texts, many slips were sewn together with hemp, silk, or leather and used to make a kind of folding book, called jiance or jiandu. The custom of interring books made of the durable bamboo strips in royal tombs has preserved many works in their original form through the centuries. An important early find was the Jizhong discovery in 279 AD of a tomb of a king of Wei, though the original recovered strips have since disappeared. Several caches of great importance have been found in recent years. https://en.wikipedia.org/wiki/Bamboo_and_wooden_slips Silk The invention of the writing brush of hair, attributed to the general Meng T\u2019ien [Meng Tian] in the third century B.C., worked a transformation in writing materials. This transformation is indicated by two changes in the language. The word for chapter used after this time means \u2019roll\u2019; the word for writing materials becomes \u2019bamboo and silk\u2019 instead of \u2019bamboo and wood.\u2019 There is evidence that the silk used for writing during the early part of the Han dynasty consisted of actual silk fabric. Letters on silk, dating possibly from Han times, have been found together with paper in a watchtower of a spur of the Great Wall. https://www.historyofinformation.com/detail.php?entryid=170 Other Birch bark The bark of the paper birch tree provides an excellent writing material. Usually, a stylus of either bone, metal or wood is used to inscribe these ideographs on the soft inner bark. Black charcoal is often used to fill the scratches to make them easier to see. To form a scroll, pieces of inscribed bark are stitched together using wadab (cedar or spruce roots). To prevent unrolling, the scroll is lashed, then placed in a cylindrically-shaped wiigwaasi-makak (birch bark box) for safe-keeping. https://en.wikipedia.org/wiki/Birch_bark_manuscript https://en.wikipedia.org/wiki/Wiigwaasabak https://en.wikipedia.org/wiki/Mi%EA%9E%8Ckmaw_hieroglyphic_writing Mi\ua78ckmaw hieroglyphic writing Father Le Clercq, a Roman Catholic missionary on the Gasp\u00e9 Peninsula in New France from 1675, saw Mi\ua78ckmaw children writing hieroglyphics on birchbark. Le Clercq adapted those symbols to write prayers and liturgy, developing new symbols as necessary. Mi'kmak also used porcupine quills pressed directly into the bark in the shape of symbols. This adapted writing system proved popular among Mi\ua78ckmaq. They were still using it in the 19th century. Since there is no historical or archaeological evidence of these symbols from before the arrival of this missionary, it is unclear how ancient the use of the mnemonic glyphs was. The relationship of these symbols to Mi\ua78ckmaq petroglyphs, which predated European encounter, is unclear. https://en.wikipedia.org/wiki/Mi%EA%9E%8Ckmaw_hieroglyphic_writing Wax tablet A wax tablet is a tablet made of wood and covered with a layer of wax, often linked loosely to a cover tablet, as a \"double-leaved\" diptych. It was used as a reusable and portable writing surface in Antiquity and throughout the Middle Ages. Writing on the wax surface was performed with a pointed instrument, a stylus. A straight-edged spatula-like implement (often placed on the opposite end of the stylus tip) would be used as an eraser. The modern expression of \"a clean slate\" equates to the Latin expression \"tabula rasa\". https://en.wikipedia.org/wiki/Wax_tablet Writing slate The writing slate was in use in Indian schools as mentioned in Alberuni's Indica (Tarikh Al-Hind), written in the early 11th century: They use black tablets for the children in the schools, and write upon them along the long side, not the broadside, writing with a white material from the left to the right. https://en.wikipedia.org/wiki/Blackboard Cree syllabics Cree syllabics were developed for Ojibwe by James Evans, a missionary in what is now Manitoba in the 1830s. Evans had originally adapted the Latin script to Ojibwe (see Evans system), but after learning of the success of the Cherokee syllabary, he experimented with invented scripts based on his familiarity with shorthand and Devanagari. When Evans later worked with the closely related Cree and ran into trouble with the Latin alphabet, he turned to his Ojibwe project and in 1840 adapted it to Cree. The result contained just nine glyph shapes, each of which stood for a syllable with the vowels determined by the shapes' orientation. After the 1841 publication of a syllabics hymn book, the new script spread quickly. The Cree valued it because it could be learned in just a few hours and because it was visually distinctive from the Latin script of the colonial languages. Virtually all Cree became literate in the new syllabary within a few years. Evans taught by writing on birchbark with soot, and he became known as \"the man who made birchbark talk.\" https://en.wikipedia.org/wiki/Cree_syllabics S\u00e1mi S\u00e1mi use either latin or cyrillic with additional modifications. https://en.wikipedia.org/wiki/S%C3%A1mi_orthography spanish letter n Historically, \u00f1 arose as a ligature of nn; the tilde was shorthand for the second n, written over the first.Its alphabetical independence is similar to the Germanic W, which came from a doubled V. miniscule/lowercase Originally alphabets were written entirely in majuscule letters, spaced between well-defined upper and lower bounds. When written quickly with a pen, these tended to turn into rounder and much simpler forms. It is from these that the first minuscule hands developed, the half-uncials and cursive minuscule, which no longer stayed bound between a pair of lines. These in turn formed the foundations for the Carolingian minuscule script, developed by Alcuin for use in the court of Charlemagne, which quickly spread across Europe. The advantage of the minuscule over majuscule was improved, faster readability. https://en.wikipedia.org/wiki/Letter_case#History Somewhere was written it was done due to save ink... shorthand Idea behind shorthand is to write down as much as possible before rewriting clean. Conclusion Resources define limits of the alphabets. Stone carving based letters were straight to facilitate writing. Leaf based writing were curvy to avoid tearing the leaf. Introduction of papyrus removed restrictions on form of letters. Ink management introduced miniscule and new letters to save ink. Writing instrument defined letters shapes (paintbrush, reed pen, quill, pencil). Shorthand writing was introduced as time saving technique to avoid losing information during important events.","title":"Writing and resources"},{"location":"writing-and-resources/#writing-and-resources","text":"Each writing style has its reason why it is formed to be what it is. In this page each alphabetics are listed with their properties. In conclusion is briefly explained limiters and enablers.","title":"Writing and resources"},{"location":"writing-and-resources/#stone","text":"","title":"Stone"},{"location":"writing-and-resources/#runic-alphabets","text":"Features: straight lines, corners, lacking curves Material: stone, knife, chisel Writing: carved with a knife or chisel into stone Notes: to make writing easier only straight lines were used","title":"Runic alphabets"},{"location":"writing-and-resources/#clay","text":"","title":"Clay"},{"location":"writing-and-resources/#cuneiform","text":"Features: repeated tokens Material: clay, stick Writing: pressure by stick on clay","title":"Cuneiform"},{"location":"writing-and-resources/#papyrus","text":"todo: gets broken, top lines, not smooth","title":"Papyrus"},{"location":"writing-and-resources/#hieratic","text":"Features: cursive Material: Papyrus, reed pen, ink Writing: writing in ink with a reed pen on papyrus Most often, hieratic script was written in ink with a reed brush on papyrus, wood, stone, or pottery ostraca. During the Roman period, reed pens (calami) were also used. Thousands of limestone ostraca have been found at the site of Deir al-Madinah, revealing an intimate picture of the lives of common Egyptian workers. Besides papyrus, stone, ceramic shards, and wood, there are hieratic texts on leather rolls, although few have survived. There are also hieratic texts written on cloth, especially on linen used in mummification. There are some hieratic texts inscribed on stone, a variety known as lapidary hieratic; these are particularly common on stelae from the twenty-second dynasty. During the late sixth dynasty, hieratic was sometimes incised into mud tablets with a stylus, similar to cuneiform. About five hundred of these tablets have been discovered in the governor's palace at Ayn Asil (Balat), and a single example was discovered from the site of Ayn al-Gazzarin, both in the Dakhla Oasis. At the time the tablets were made, Dakhla was located far from centers of papyrus production. These tablets record inventories, name lists, accounts, and approximately fifty letters. Of the letters, many are internal letters that were circulated within the palace and the local settlement, but others were sent from other villages in the oasis to the governor. https://en.wikipedia.org/wiki/Hieratic","title":"Hieratic"},{"location":"writing-and-resources/#demotic","text":"Features: cursive Material: Papyrus, reed pen, ink Writing: writing in ink with a reed pen on papyrus Notes: developed from Hieratic https://en.wikipedia.org/wiki/Demotic_(Egyptian)","title":"Demotic"},{"location":"writing-and-resources/#leaf","text":"","title":"Leaf"},{"location":"writing-and-resources/#palm-leaf","text":"The text in palm leaf manuscripts was inscribed with a knife pen on rectangular cut and cured palm leaf sheets; colourings were then applied to the surface and wiped off, leaving the ink in the incised grooves. Each sheet typically had a hole through which a string could pass, and with these the sheets were tied together with a string to bind like a book. A palm leaf text thus created would typically last between a few decades and about 600 years before it decayed due to dampness, insect activity, mold and fragility. Thus the document had to be copied onto new sets of dried palm leaves. The oldest surviving palm leaf Indian manuscripts have been found in colder, drier climates such as in parts of Nepal, Tibet and central Asia, the source of 1st-millennium CE manuscripts. The round and cursive design of the letters of many South Indian and Southeast Asian scripts, such as Devanagari, Nandinagari, Kannada, Telugu, Lontara, Javanese, Balinese, Odia, Burmese, Tamil, Khmer, and so forth, may be an adaptation to the use of palm leaves, as angular letters could tear the leaves apart. https://en.wikipedia.org/wiki/Palm-leaf_manuscript Notes: word page is translated as leaf in some of these languages","title":"Palm leaf"},{"location":"writing-and-resources/#bamboo","text":"Bamboo and wooden slips (simplified Chinese: \u7b80\u724d; traditional Chinese: \u7c21\u7258; pinyin: ji\u01cend\u00fa) were the main media for writing documents in China before the widespread introduction of paper during the first two centuries AD. (Silk was occasionally used, for example in the Chu Silk Manuscript, but was prohibitively expensive for most documents.) The earliest surviving examples of wood or bamboo slips date from the 5th century BC during the Warring States period. However, references in earlier texts surviving on other media make it clear that some precursor of these Warring States period bamboo slips was in use as early as the late Shang period (from about 1250 BC). Bamboo or wooden strips were the standard writing material during the Han dynasty and excavated examples have been found in abundance. Subsequently, the invention of paper by Cai Lun during the Han dynasty began to displace bamboo and wooden strips from mainstream uses, and by the 4th century AD bamboo had been largely abandoned as a medium for writing in China. The long, narrow strips of wood or bamboo typically carry a single column of brush-written text each, with space for several tens of visually complex ancient Chinese characters. Each strip of wood or bamboo is said to be as long as a chopstick and as wide as two. For longer texts, many slips were sewn together with hemp, silk, or leather and used to make a kind of folding book, called jiance or jiandu. The custom of interring books made of the durable bamboo strips in royal tombs has preserved many works in their original form through the centuries. An important early find was the Jizhong discovery in 279 AD of a tomb of a king of Wei, though the original recovered strips have since disappeared. Several caches of great importance have been found in recent years. https://en.wikipedia.org/wiki/Bamboo_and_wooden_slips","title":"Bamboo"},{"location":"writing-and-resources/#silk","text":"The invention of the writing brush of hair, attributed to the general Meng T\u2019ien [Meng Tian] in the third century B.C., worked a transformation in writing materials. This transformation is indicated by two changes in the language. The word for chapter used after this time means \u2019roll\u2019; the word for writing materials becomes \u2019bamboo and silk\u2019 instead of \u2019bamboo and wood.\u2019 There is evidence that the silk used for writing during the early part of the Han dynasty consisted of actual silk fabric. Letters on silk, dating possibly from Han times, have been found together with paper in a watchtower of a spur of the Great Wall. https://www.historyofinformation.com/detail.php?entryid=170","title":"Silk"},{"location":"writing-and-resources/#other","text":"","title":"Other"},{"location":"writing-and-resources/#birch-bark","text":"The bark of the paper birch tree provides an excellent writing material. Usually, a stylus of either bone, metal or wood is used to inscribe these ideographs on the soft inner bark. Black charcoal is often used to fill the scratches to make them easier to see. To form a scroll, pieces of inscribed bark are stitched together using wadab (cedar or spruce roots). To prevent unrolling, the scroll is lashed, then placed in a cylindrically-shaped wiigwaasi-makak (birch bark box) for safe-keeping. https://en.wikipedia.org/wiki/Birch_bark_manuscript https://en.wikipedia.org/wiki/Wiigwaasabak https://en.wikipedia.org/wiki/Mi%EA%9E%8Ckmaw_hieroglyphic_writing","title":"Birch bark"},{"location":"writing-and-resources/#mikmaw-hieroglyphic-writing","text":"Father Le Clercq, a Roman Catholic missionary on the Gasp\u00e9 Peninsula in New France from 1675, saw Mi\ua78ckmaw children writing hieroglyphics on birchbark. Le Clercq adapted those symbols to write prayers and liturgy, developing new symbols as necessary. Mi'kmak also used porcupine quills pressed directly into the bark in the shape of symbols. This adapted writing system proved popular among Mi\ua78ckmaq. They were still using it in the 19th century. Since there is no historical or archaeological evidence of these symbols from before the arrival of this missionary, it is unclear how ancient the use of the mnemonic glyphs was. The relationship of these symbols to Mi\ua78ckmaq petroglyphs, which predated European encounter, is unclear. https://en.wikipedia.org/wiki/Mi%EA%9E%8Ckmaw_hieroglyphic_writing","title":"Mi\ua78ckmaw hieroglyphic writing"},{"location":"writing-and-resources/#wax-tablet","text":"A wax tablet is a tablet made of wood and covered with a layer of wax, often linked loosely to a cover tablet, as a \"double-leaved\" diptych. It was used as a reusable and portable writing surface in Antiquity and throughout the Middle Ages. Writing on the wax surface was performed with a pointed instrument, a stylus. A straight-edged spatula-like implement (often placed on the opposite end of the stylus tip) would be used as an eraser. The modern expression of \"a clean slate\" equates to the Latin expression \"tabula rasa\". https://en.wikipedia.org/wiki/Wax_tablet","title":"Wax tablet"},{"location":"writing-and-resources/#writing-slate","text":"The writing slate was in use in Indian schools as mentioned in Alberuni's Indica (Tarikh Al-Hind), written in the early 11th century: They use black tablets for the children in the schools, and write upon them along the long side, not the broadside, writing with a white material from the left to the right. https://en.wikipedia.org/wiki/Blackboard","title":"Writing slate"},{"location":"writing-and-resources/#cree-syllabics","text":"Cree syllabics were developed for Ojibwe by James Evans, a missionary in what is now Manitoba in the 1830s. Evans had originally adapted the Latin script to Ojibwe (see Evans system), but after learning of the success of the Cherokee syllabary, he experimented with invented scripts based on his familiarity with shorthand and Devanagari. When Evans later worked with the closely related Cree and ran into trouble with the Latin alphabet, he turned to his Ojibwe project and in 1840 adapted it to Cree. The result contained just nine glyph shapes, each of which stood for a syllable with the vowels determined by the shapes' orientation. After the 1841 publication of a syllabics hymn book, the new script spread quickly. The Cree valued it because it could be learned in just a few hours and because it was visually distinctive from the Latin script of the colonial languages. Virtually all Cree became literate in the new syllabary within a few years. Evans taught by writing on birchbark with soot, and he became known as \"the man who made birchbark talk.\" https://en.wikipedia.org/wiki/Cree_syllabics","title":"Cree syllabics"},{"location":"writing-and-resources/#sami","text":"S\u00e1mi use either latin or cyrillic with additional modifications. https://en.wikipedia.org/wiki/S%C3%A1mi_orthography","title":"S\u00e1mi"},{"location":"writing-and-resources/#spanish-letter-n","text":"Historically, \u00f1 arose as a ligature of nn; the tilde was shorthand for the second n, written over the first.Its alphabetical independence is similar to the Germanic W, which came from a doubled V.","title":"spanish letter n"},{"location":"writing-and-resources/#minisculelowercase","text":"Originally alphabets were written entirely in majuscule letters, spaced between well-defined upper and lower bounds. When written quickly with a pen, these tended to turn into rounder and much simpler forms. It is from these that the first minuscule hands developed, the half-uncials and cursive minuscule, which no longer stayed bound between a pair of lines. These in turn formed the foundations for the Carolingian minuscule script, developed by Alcuin for use in the court of Charlemagne, which quickly spread across Europe. The advantage of the minuscule over majuscule was improved, faster readability. https://en.wikipedia.org/wiki/Letter_case#History Somewhere was written it was done due to save ink...","title":"miniscule/lowercase"},{"location":"writing-and-resources/#shorthand","text":"Idea behind shorthand is to write down as much as possible before rewriting clean.","title":"shorthand"},{"location":"writing-and-resources/#conclusion","text":"Resources define limits of the alphabets. Stone carving based letters were straight to facilitate writing. Leaf based writing were curvy to avoid tearing the leaf. Introduction of papyrus removed restrictions on form of letters. Ink management introduced miniscule and new letters to save ink. Writing instrument defined letters shapes (paintbrush, reed pen, quill, pencil). Shorthand writing was introduced as time saving technique to avoid losing information during important events.","title":"Conclusion"}]}